events {
	worker_connections 1024;
}

http {
	include mime.types;
	default_type application/octet-stream;

	sendfile on;
	keepalive_timeout 65;

	client_max_body_size 1000M;

	# HTTP server block
	server {
		listen 80;
		server_name localhost db.portaltest.ort.spb.ru db.portal.ort.spb.ru;

		# # Redirect all HTTP requests to HTTPS
		# location / {
		# 	return 301 https://$host$request_uri;
		# }

		# TODO: Remove testing with HTTP
		location / {
			# Allow CORS universally
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				#
				# Custom headers and headers various browsers *should* be OK with but aren't
				#
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
				#
				# Tell client that this pre-flight info is valid for 20 days
				#
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain; charset=utf-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
				add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
			}
			if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
				add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
			}
			proxy_pass http://app:3000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header fstoken $http_fstoken; # Pass the fstoken header
		}
	}

	# HTTPS server block
	# server {
	# 	listen 443 ssl;
	# 	server_name localhost db.portaltest.ort.spb.ru db.portal.ort.spb.ru;

	# 	# SSL configuration
	# 	ssl_certificate /etc/nginx/ssl/yourdomain.com.crt;
	# 	ssl_certificate_key /etc/nginx/ssl/yourdomain.com.key;
	# 	ssl_protocols TLSv1.2 TLSv1.3;
	# 	ssl_ciphers HIGH:!aNULL:!MD5;
	# 	ssl_prefer_server_ciphers on;
	# 	ssl_session_cache shared:SSL:10m;
	# 	# Proxy settings
	# 	location / {
	# 		proxy_pass http://app:3000;
	# 		proxy_set_header Host $host;
	# 		proxy_set_header X-Real-IP $remote_addr;
	# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 		proxy_set_header X-Forwarded-Proto $scheme;
	# 		proxy_set_header fstoken $http_fstoken; # Pass the fstoken header
	# 	}
	# }
}